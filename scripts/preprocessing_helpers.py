# from preprocessing script

@orca.step()
def move_jobs_from_portola_to_san_mateo_county(parcels, buildings, jobs_df):
    # need to move jobs from portola valley to san mateo county
    NUM_IN_PORTOLA = 1500

    juris = misc.reindex(
        parcels.juris, misc.reindex(buildings.parcel_id, jobs_df.building_id))

    # find jobs in portols valley to move
    portola = jobs_df[juris == "Portola Valley"]
    move = portola.sample(len(portola) - NUM_IN_PORTOLA)

    # find places in san mateo to which to move them
    san_mateo = jobs_df[juris == "San Mateo County"]
    move_to = san_mateo.sample(len(move))

    jobs_df.loc[move.index, "building_id"] = move_to.building_id.values

    return jobs_df
# from def preproc_jobs
jobs = move_jobs_from_portola_to_san_mateo_county(parcels, buildings, jobs)


# from def preproc_households
    # there are some overrides where we move households around in order
    # to match the city totals - in the future we will resynthesize and this
    # can go away - this csv is generated by scripts/match_city_totals.py
    overrides = pd.read_csv("data/household_building_id_overrides.csv",
                            index_col="household_id").building_id
    df.loc[overrides.index, "building_id"] = overrides.values


# from def preproc_households
    # turns out we need 4 more households
    new_households = df.loc[[1132542, 1306618, 950630, 886585]].reset_index()
    # keep unique index
    new_households.index += pd.Series(df.index).max() + 1
    df = df.append(new_households)